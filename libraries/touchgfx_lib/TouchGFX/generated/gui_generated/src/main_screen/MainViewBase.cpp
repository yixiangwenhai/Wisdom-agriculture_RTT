/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &MainViewBase::sliderValueChangedCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 1024, 600);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    background.setXY(342, 606);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_480X272PX_ID));

    graphBackground.setPosition(357, 630, 389, 224);
    graphBackground.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    graphBackground.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    graphBackground.setBorderSize(1);

    graph.setScale(1);
    graph.setGraphRangeX(0, 100);
    graph.setPosition(357, 630, 389, 224);
    graph.setGraphAreaMargin(10, 28, 19, 22);
    graph.setGraphAreaPadding(2, 6, 0, 6);
    graph.setGraphRangeY(0, 180);

    graphMajorYAxisGrid.setScale(1);
    graphMajorYAxisGrid.setColor(touchgfx::Color::getColorFrom24BitRGB(20, 151, 197));
    graphMajorYAxisGrid.setInterval(20);
    graphMajorYAxisGrid.setLineWidth(1);
    graph.addGraphElement(graphMajorYAxisGrid);

    graphMajorXAxisLabel.setScale(1);
    graphMajorXAxisLabel.setInterval(20);
    graphMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
    graphMajorXAxisLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    graph.addBottomElement(graphMajorXAxisLabel);

    graphMajorYAxisLabel.setScale(1);
    graphMajorYAxisLabel.setInterval(20);
    graphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
    graphMajorYAxisLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    graph.addLeftElement(graphMajorYAxisLabel);

    graphLine1.setScale(1);
    graphLine1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(20, 151, 197));
    graphLine1.setPainter(graphLine1Painter);
    graphLine1.setLineWidth(2);
    graph.addGraphElement(graphLine1);

    sliderResolution.setXY(769, 653);
    sliderResolution.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    sliderResolution.setupVerticalSlider(7, 3, 0, 0, 125);
    sliderResolution.setValueRange(20, 250);
    sliderResolution.setValue(180);
    sliderResolution.setNewValueCallback(sliderValueChangedCallback);

    box1.setPosition(0, 0, 1024, 600);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    textWenDu.setXY(122, 62);
    textWenDu.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textWenDu.setLinespacing(0);
    Unicode::snprintf(textWenDuBuffer, TEXTWENDU_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
    textWenDu.setWildcard(textWenDuBuffer);
    textWenDu.resizeToCurrentText();
    textWenDu.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));

    textArea1_2.setXY(446, 272);
    textArea1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    textArea1_3.setXY(461, 115);
    textArea1_3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_3.setLinespacing(0);
    textArea1_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    textArea1_4.setXY(440, 432);
    textArea1_4.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_4.setLinespacing(0);
    textArea1_4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));

    toggleButton1.setXY(582, 115);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1.setAction(buttonCallback);

    toggleButton1_1.setXY(601, 272);
    toggleButton1_1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1_1.setAction(buttonCallback);

    toggleButton1_2.setXY(601, 432);
    toggleButton1_2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1_2.setAction(buttonCallback);

    textErYangHuaTan.setXY(122, 467);
    textErYangHuaTan.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textErYangHuaTan.setLinespacing(0);
    Unicode::snprintf(textErYangHuaTanBuffer, TEXTERYANGHUATAN_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID15).getText());
    textErYangHuaTan.setWildcard(textErYangHuaTanBuffer);
    textErYangHuaTan.resizeToCurrentText();
    textErYangHuaTan.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));

    textJiaQuan.setXY(122, 354);
    textJiaQuan.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textJiaQuan.setLinespacing(0);
    Unicode::snprintf(textJiaQuanBuffer, TEXTJIAQUAN_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID16).getText());
    textJiaQuan.setWildcard(textJiaQuanBuffer);
    textJiaQuan.resizeToCurrentText();
    textJiaQuan.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));

    textGuangZhao.setXY(122, 272);
    textGuangZhao.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textGuangZhao.setLinespacing(0);
    Unicode::snprintf(textGuangZhaoBuffer, TEXTGUANGZHAO_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID17).getText());
    textGuangZhao.setWildcard(textGuangZhaoBuffer);
    textGuangZhao.resizeToCurrentText();
    textGuangZhao.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));

    textShiDu.setXY(122, 150);
    textShiDu.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textShiDu.setLinespacing(0);
    Unicode::snprintf(textShiDuBuffer, TEXTSHIDU_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID14).getText());
    textShiDu.setWildcard(textShiDuBuffer);
    textShiDu.resizeToCurrentText();
    textShiDu.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));

    add(__background);
    add(background);
    add(graphBackground);
    add(graph);
    add(sliderResolution);
    add(box1);
    add(textWenDu);
    add(textArea1_2);
    add(textArea1_3);
    add(textArea1_4);
    add(toggleButton1);
    add(toggleButton1_1);
    add(toggleButton1_2);
    add(textErYangHuaTan);
    add(textJiaQuan);
    add(textGuangZhao);
    add(textShiDu);
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call diandeng
        diandeng();
    }
    else if (&src == &toggleButton1_1)
    {
        //Interaction2
        //When toggleButton1_1 clicked call virtual function
        //Call jiashiqi
        jiashiqi();
    }
    else if (&src == &toggleButton1_2)
    {
        //Interaction3
        //When toggleButton1_2 clicked call virtual function
        //Call fenshan
        fenshan();
    }
}

void MainViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderResolution)
    {
        //SliderValueChanged
        //When sliderResolution value changed call virtual function
        //Call sliderValueChanged
        sliderValueChanged(value);
    }
}
